# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ce4a10bc-1bfa-41bb-a5c6-845f20ca7186'
  imageRepository: 'sample/nginx'
  containerRegistry: 'registry151.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Dev
  displayName: Deploy to DEV
  jobs:
  - job: Deploy
    displayName: Deploy to Azure Container Instance
    steps:
     - task: AzureCLI@2
       displayName: 'Azure CLI'
       inputs:
         azureSubscription: 'my-service-app'
         scriptType: pscore
         scriptLocation: inlineScript
         inlineScript: |
             az container create -g rg --name devenvcont --image registry151.azurecr.io/sample/nginx:$(Build.BuildId) --dns-name-label devapp151 --os-type Linux --cpu 1 --memory 1 --registry-login-server registry151.azurecr.io --registry-username registry151 --registry-password oS5m/BakMGFbwqhNMR+/L9t96YVrJQpobiiZYcXZlI+ACRBS5TV5  --ports 80

- stage: QA
  displayName: Deploy to QA
  jobs:
  - job: Deploy
    displayName: Deploy to Azure Container Instance
    steps:
     - task: AzureCLI@2
       displayName: 'Azure CLI'
       inputs:
         azureSubscription: 'my-service-app'
         scriptType: pscore
         scriptLocation: inlineScript
         inlineScript: |
             az container create -g rg --name qaenvcont --image registry151.azurecr.io/sample/nginx:$(Build.BuildId) --dns-name-label qaapp151 --os-type Linux --cpu 1 --memory 1 --registry-login-server registry151.azurecr.io --registry-username registry151 --registry-password oS5m/BakMGFbwqhNMR+/L9t96YVrJQpobiiZYcXZlI+ACRBS5TV5  --ports 80
